\documentclass{article}

% specify required packages
\usepackage{fullpage}
\usepackage{graphicx}
\usepackage[section]{placeins}
\usepackage{listings}
\usepackage{hyperref}

\begin{document}

\begin{titlepage}
   \vspace*{\stretch{1.0}}
   \begin{center}
      \Large\textbf{R and Google Maps}\\
      \large\textit{Jim Thompson}\\
      \large{August 2014}
   \end{center}
   \vspace*{\stretch{2.0}}
\end{titlepage}


This paper demonstrates use of R packages \textbf{ggmap}\footnote{Kahle, D. and Wickham, H., \textbf{ggmap: Spatial Visualization with ggplot2}, \textit{The R Journal}, Vol. 5/1, \url{http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf}} and related spatial packages for 
visualizing and analyzing spatial data.  \textbf{ggmap} provides functions to visualize spatial data on top of maps built using Google Maps, OpenStreetMaps, Stamen Maps, or CloudMade Maps.  
In addition, this paper illustrates how these R packages can be used in conjunction with
Census Bureau geographic data and National Hurricane forecast data to determine properties
that may be impacted by a hurricane.


\section*{Creating Google Map in R}
In this section, we show how to geocode an address to determine its location, i.e.,
longitude and latitude.  We then generate a Google map and annotate the map with
the location information of the geocoded address.

Following code geocodes an address using the \textbf{ggmap}'s function \textbf{geocode()}.

<<,message=FALSE,warning=FALSE>>=
###
# Geocode and map address
###
library(ggmap)

address.of.interest <- "8250 Jones Branch Dr., McLean, VA"

# call Google web service API to geocode the address
location <- geocode(address.of.interest,output="more")

# show resulting geocoded address
cat("property is located at longitude=",location[1,1],", latitude=",location[1,2],"\n")
@

Following code fragment draws and annotates a Google map centered on the specified location.
<<,eval=FALSE>>=
# create Google map centered on address
this.map <- get_map(address.of.interest,16)

# draw map and annotate
png("./figures/sample_map.png")
ggmap(this.map) +
    # plot plot
    geom_point(aes(x=lon, y=lat), data=location, shape=4, size=5, color="red") +
    
    # label point
    geom_text(aes(x=lon, y=lat), data= location, label=address.of.interest, 
              size=4,
              hjust=0.5, vjust=1.5,
              color="red", fontface="bold")
dev.off()
@
\begin{figure}[t]
    \centering
    \includegraphics[width=0.75\maxwidth]{../figures/sample_map.png}
    \caption{Sample Google Map}
    \label{fig:sample_map}
\end{figure}

\textbf{Note:} For the free web API Google imposes a limit of 2,500\footnote{\url{https://developers.google.com/maps/documentation/geocoding/\#Limits}} addresses that can be geocoded in a 24-hour period. 


\section*{Hurricane Impact Analysis Use Case}
This use case illustrates how features of \textbf{ggmap} and other R packages related to spatial data can be used in conjunction with hurricane forecast data from the National Hurricane Center to identify individual properties that may be affected by a hurricane.  For this example, the October 28, 2012 forecast data for Hurricane Sandy is used.

All source code for this use case can be found in the appendices at the end and on GitHub \\
at \url{https://github.com/jimthompson5802/GeoSpatial}.

\subsection*{Simulated Property Data}
% Set 'cache=FALSE' for testing code in following code chunk
<<,cache=FALSE,warning=FALSE,message=FALSE,echo=FALSE,results="hide">>=
source("../munge/generatePropertyTest.R",echo=TRUE)
@

\Sexpr{property.count} simulated properties were randomly placed in
\Sexpr{length(attr(counties.of.interest,"polygons"))} Virginia administrative areas.  Property
values for the simulated properties are uniform pseudo-random values between \$50,000 and \$200,000.  The total value of the simulate properties is \$\Sexpr{format(property.value,big.mark=",")}. Figure~\ref{fig:simulated_property} show locations of the simulated properties. Table~\ref{tab:simulated_data} shows data for the first six simulated
properties.
<<,echo=FALSE,message=FALSE,results='asis'>>=
library(xtable)
df <- property.df[1:6,]
names(df) <- c("Longitude", "Latitude", "Property Value")
print(xtable(df, caption="Sample Simulated Property Data", 
       label="tab:simulated_data"), include.rownames=FALSE)
@

\begin{figure}[!htbp]
    \centering
    \includegraphics[width=0.75\textwidth]{../figures/base_property_locations.png}
    \caption{Simulated Property Locations}
    \label{fig:simulated_property}
\end{figure}



\subsection*{Storm Path Analysis}
% Set 'cache=FALSE' for testing code in following code chunk
<<,cache=FALSE,warning=FALSE,message=FALSE,echo=FALSE,results="hide">>=
source("drawHurricanePath.R",echo=TRUE)
@
The \href{http://www.nhc.noaa.gov/gis/}{National Hurricane Center} provides storm 
forecast data in ERSI shapefile format.  Shapefiles are a geospatial vector data format for geographic information systems software. Shapefiles spatially describe points, lines and polygons.  

In addition to \textbf{ggmap}, these R packages are used:
\begin{itemize}
    \item \textbf{maptools} - Set of tools for manipulating and reading geographic data, in particular ESRI shapefiles.
    \item \textbf{rgeos} - Interface to Geometry Engine - Open Source (GEOS) using the C API for topology operations on geometries. 
    \item \textbf{raster} - Functions for reading, writing, manipulating, analyzing and modeling of gridded spatial data.
    \item \textbf{sp} - A package that provides classes and methods for spatial data.
    \item \textbf{ggplot2} - An implementation of the grammar of graphics in R.
\end{itemize}

Steps taken for the storm are analysis.
\begin{itemize}
    \item Simulated property data loaded in \textbf{SpatialPointsDataFrame} 
    structure.
    \item State and County boundaries from the \href{http://www.census.gov/geo/maps-data/data/tiger-line.html}{Census Bureau} loaded into \textbf{SpatialPolygonsDataFrame} structures.
    \item Storm path data, which are provided as shapefile, from the 
    \href{http://www.nhc.noaa.gov/gis/}{National Hurricane Center} (NHC) loaded in \textbf{SpatialPolygonsDataFrame} structure.  This code fragment reads the NHC 
    storm path description into a R structure.
<<,eval=FALSE>>=
# retieve storm path shapefile
storm.cone<-readShapeSpatial("../nhcdata/al182012_5day_025/al182012.025_5day_pgn.shp",
                               proj4string = CRS("+proj=longlat +datum=WGS84"))
@
    Yellow area in Figure~\ref{fig:high-level-path} shows the 72-hour forecast 
    for the possible areas that will be impacted by Hurricane Sandy.  
    Figure~\ref{fig:mid-level-path} shows possible impacted areas within the 
    mid-Atlantic region.


    \begin{figure}[htbp]
        \centering
        \includegraphics[width=0.75\maxwidth]{../figures/high-level_storm_path.png}
        \caption{Hurricane Sandy Forecast Path (East Coast), October 28, 2012}
        \label{fig:high-level-path}
    \end{figure}
    \begin{figure}[htbp]
        \centering
        \includegraphics[width=0.75\maxwidth]{../figures/mid-level_storm_path.png}
        \caption{Hurricane Sandy Forecast Path (Mid-Atlantic), October 28, 2012}
        \label{fig:mid-level-path}
    \end{figure}
    
    
    \item Function \textbf{over()} from the package \textbf{sp} provides a means to 
    determine whether or not an individual property is contained within the 
    polygon structures describing the storm path.  This code fragment peforms 
    the test. For each point in the \textit{property.locations} the value of 
    \textit{flag} will be
    the polygon identifer in \textit{sp.storm}, which describe the storm path, 
    containing the point or \textbf{NA} if none of the polygons contain the point.
<<,eval=FALSE>>=
# determine the properties in the storm path region
flag <- over(property.locations,sp.storm)
property.df$col <- factor(ifelse(!is.na(flag),"in","out"),levels=c("in","out"))
@        
    Figure~\ref{fig:impacted-properties} shows areas in the Washington, D.C.
area potentially in the path of Hurricane Sandy.  Properties in the hurricane path are shown in red.  
Out of the \Sexpr{property.count} properties in the study, we find that \Sexpr{property.count.at.risk} properties are in the projected storm path.  These properties account for 
\$\Sexpr{format(property.value.at.risk,big.mark=",")} out of the total \$\Sexpr{format(property.value,big.mark=",")}. 
    \begin{figure}[htbp]
        \centering
        \includegraphics[width=0.75\maxwidth]{../figures/affected_properties.png}
        \caption{Properties Potentially Impacted by Hurricane Sandy}
        \label{fig:impacted-properties}
    \end{figure}

\end{itemize}

\section*{Appendix - Hurricane Path Analysis}
\lstinputlisting[language=R]{drawHurricanePath.R}
\newpage

\section*{Appendix - Generate Sample Property Data}
\lstinputlisting[language=R]{../munge/generatePropertyTest.R}
\newpage

\section*{Appendix - CommonFunctions.R}
\lstinputlisting[language=R]{CommonFunctions.R}



\end{document}